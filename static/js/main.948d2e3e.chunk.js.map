{"version":3,"sources":["Components/Sticky/Sticky.js","Components/SearchBox/SearchBox.js","Components/Header/actions.js","Components/Header/actionTypes.js","Components/Header/Header.js","Components/Scroll/Scroll.js","Components/FrontCard/FrontCard.js","Components/Pie/Pie.js","Components/BackCard/BackCard.js","Components/Card/Card.js","Components/CardList/CardList.js","Components/ErrorBoundary/ErrorBoundary.js","utils/fetchPokemon.js","Components/PokemonGrid/actions.js","Components/PokemonGrid/actionTypes.js","utils/useFetchPokemonEffect.js","Components/PokemonGrid/PokemonGrid.js","lib/arrayUtil.js","Components/App/App.js","serviceWorker.js","Components/Header/reducer.js","Components/PokemonGrid/reducers.js","index.js"],"names":["Sticky","props","className","children","SearchBox","onChange","data-testid","type","placeholder","setSearchBox","text","Header","dispatch","useDispatch","useCallback","event","target","value","Scroll","FrontCard","name","image","src","alt","Pie","stats","colors","label","dataEntry","labelPosition","labelStyle","fontSize","fontWeight","style","height","padding","lineWidth","paddingAngle","rounded","radius","data","Object","keys","map","key","i","title","color","BackCard","abilities","types","alignSelf","paddingTop","syle","flexBasis","join","Card","id","pokemon","CardList","pokemons","rest","ErrorBoundary","state","hasError","error","info","this","setState","React","Component","fetchPokemons","a","pokemonApiGetAll","buildUIReadableObject","Promise","all","fetch","url","json","details","sprites","front_default","index","ability","stat","base_stat","reduce","current","filter","results","recievedPokemon","useFetchPokemonEffect","useEffect","PokemonGrid","useSelector","setPokemon","isPending","searchField","changeSearchBox","console","log","array","n","randomPokemon","useMemo","sort","Math","random","slice","element","toLowerCase","includes","App","Boolean","window","location","hostname","match","initialState","action","rootReducer","combineReducers","store","createStore","applyMiddleware","createLogger","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.948d2e3e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Sticky.css';\r\n\r\nconst Sticky = (props)=>{\r\n    return (\r\n        <header className='sticky' >\r\n            {props.children}\r\n        </header>\r\n    )\r\n\r\n};\r\n\r\nexport default Sticky;","import React, { Fragment } from 'react';\r\nimport './SearchBox.css'\r\n\r\nconst SearchBox = ({onChange}) =>{\r\n    return(\r\n        <Fragment>\r\n            <input\r\n            data-testid=\"search-bar\"\r\n            className= 'search-box' \r\n            type=\"text\"\r\n            placeholder=\"Search Pokemon\"\r\n            onChange = {onChange}\r\n            />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default SearchBox;","import { SET_SEARCH_BOX } from './actionTypes';\r\n\r\nconst setSearchBox = (text) => {\r\n    return {\r\n        type: SET_SEARCH_BOX,\r\n        text,                   // NOTE: equivalent to text: text\r\n    }\r\n}\r\n\r\nexport default setSearchBox;","export const SET_SEARCH_BOX = \"SET_SEARCH_BOX\";","import React, { useCallback } from \"react\";\r\nimport Sticky from \"../Sticky/Sticky\";\r\nimport SearchBox from \"../SearchBox/SearchBox\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport setSearchBox from \"./actions\";\r\n\r\n\r\nconst useSearchChange = dispatch => useCallback(\r\n  event => dispatch(setSearchBox(event.target.value)),[dispatch]);\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Sticky>\r\n      <h1>Pokedex</h1>\r\n      <SearchBox onChange={useSearchChange(useDispatch())} />\r\n    </Sticky>\r\n  );\r\n};\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Scroll.css'\r\n\r\nconst Scroll = (props)=>{\r\n    return (\r\n        <section className='scrollable' >\r\n            {props.children}\r\n        </section>\r\n    )\r\n\r\n};\r\n\r\nexport default Scroll\r\n","import React from \"react\";\r\nimport './FrontCard.css';\r\n\r\nconst FrontCard = ({name, image}) => {\r\n  return (\r\n    <div className=\"front-card\">\r\n      <img\r\n        data-testid=\"avatar-img\"\r\n        src={image}\r\n        alt={name}\r\n      />\r\n      <figcaption className=\"caption\" data-testid=\"avatar-name\">{name}</figcaption>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FrontCard;\r\n","import React from \"react\";\r\nimport { PieChart} from \"react-minimal-pie-chart\";\r\n\r\nconst Pie = ({ stats }) => {\r\n  const colors= [\"yellow\",\"green\",\"blue\",\"red\",\"orange\",\"gray\"]\r\n  return (\r\n    <PieChart\r\n      label= {({dataEntry})=> dataEntry.value}\r\n      labelPosition={110}\r\n      labelStyle={{fontSize: \"7px\", fontWeight: \"bold\"}}\r\n      style={{height: \"50%\", padding: \"5px 0 5px 0\"}} \r\n      lineWidth={20}\r\n      paddingAngle={15}\r\n      rounded={true}\r\n      radius={40}\r\n      data={Object.keys(stats).map((key, i) => {\r\n        return {\r\n          title: key,\r\n          value: stats[key],\r\n          color: colors[i],\r\n          key: i,\r\n        };\r\n      })} \r\n    />\r\n  );\r\n};\r\n\r\nexport default Pie;\r\n","import React from \"react\";\r\nimport \"./BackCard.css\";\r\nimport Pie from \"../Pie/Pie\";\r\n\r\n\r\nconst BackCard = ({abilities, stats, types }) => {\r\n  return (\r\n    <div data-testid=\"container-test\" className=\"back-card\">\r\n      <span style={{alignSelf: \"center\", paddingTop: \"5px\", fontWeight: \"bolder\"}}>Base Stats</span>\r\n      <Pie\r\n      syle={{flexBasis: \"50%\"}}\r\n      stats={stats}\r\n      />\r\n      <span data-testid= \"types-test\">\r\n        {`Types: ${types.join(\", \")}`}\r\n      </span>\r\n      <span data-testid= \"abilities-test\">\r\n        {`Abilities: ${abilities.join(\", \")}`}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default BackCard;\r\n","import React from \"react\";\r\nimport FrontCard from \"../FrontCard/FrontCard\";\r\nimport \"./Card.css\";\r\nimport BackCard from \"../BackCard/BackCard\";\r\n\r\nconst Card = ({id, pokemon}) => {\r\n  return (\r\n    <div className=\"card\" key={id}>\r\n      <div className=\"inner\" data-testid=\"card-info\">\r\n        <FrontCard name={pokemon.name} image={pokemon.image}/>\r\n        <BackCard abilities={pokemon.abilities} stats={pokemon.stats} types={pokemon.types}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from '../Card/Card';\r\nimport './CardList.css';\r\n\r\nconst CardList = ({pokemons}) =>{\r\n    return (\r\n        <div className='container'>\r\n            {pokemons.map((pokemon)=>{\r\n                const {id,...rest} = pokemon;\r\n                return (\r\n                    <Card \r\n                    key={id}\r\n                    pokemon={rest}\r\n                    />\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\n\r\nclass ErrorBoundary extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false,\r\n        };\r\n    }\r\n\r\n    componentDidCatch(error,info){\r\n        this.setState({hasError: true});\r\n    }\r\n\r\n    render() {\r\n       return this.state.hasError? <h1>Something Went Wrong...</h1>:this.props.children;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ErrorBoundary;","const fetchPokemons = async () => {\r\n  const pokemons = await pokemonApiGetAll(\"https://pokeapi.co/api/v2/pokemon?limit=1000\");\r\n  return await buildUIReadableObject(pokemons);\r\n};\r\n\r\nconst buildUIReadableObject = async (pokemons) => {\r\n  return (await Promise.all(\r\n    pokemons.map(async (pokemon, i) => {\r\n      const details = await (await fetch(pokemon.url)).json();\r\n      return {\r\n          id: i,\r\n          name: pokemon.name,\r\n          image: details.sprites.front_default,\r\n          abilities: details.abilities.map((index) => index.ability.name),\r\n          stats: details.stats.map((index) => {return {[index.stat.name]: index.base_stat}}).reduce((rest,current) => {return {...rest, ...current}},{}),\r\n          types: details.types.map((index) => index.type.name),\r\n      }\r\n    })\r\n  )).filter(pokemon => pokemon.image !== null);\r\n};\r\n\r\nconst pokemonApiGetAll= async (url) =>{\r\n  return (await(await fetch(url)).json()).results;\r\n}\r\n\r\nexport default fetchPokemons;\r\n","import {\r\n  FETCH_POKEMON_PENDING,\r\n  FETCH_POKEMON_SUCCESS,\r\n  FETCH_POKEMON_FAILURE,\r\n} from \"./actionTypes\";\r\n\r\nimport fetchPokemons from '../../utils/fetchPokemon';\r\n\r\nexport const fetchingPokemon = () =>{\r\n  return {\r\n    type: FETCH_POKEMON_PENDING\r\n  }\r\n}\r\n\r\nexport const recievedPokemon = (pokemon) =>{\r\n  return {\r\n    type: FETCH_POKEMON_SUCCESS,\r\n    pokemon\r\n  }\r\n}\r\n\r\nexport const failedPokemon = (error) =>{\r\n  return {\r\n    type: FETCH_POKEMON_FAILURE,\r\n    error\r\n  }\r\n}\r\n\r\nexport const callPokemonAPI = () =>{\r\n  return (async (dispatch) =>{\r\n    dispatch(fetchingPokemon());\r\n    try{\r\n    dispatch(recievedPokemon(await fetchPokemons()));\r\n    }catch(err){\r\n      dispatch(failedPokemon(err));\r\n    }\r\n  })\r\n}\r\n\r\n","export const FETCH_POKEMON_PENDING = \"FETCH_POKEMON_PENDING\";\r\nexport const FETCH_POKEMON_SUCCESS = \"FETCH_POKEMON_SUCCESS\";\r\nexport const FETCH_POKEMON_FAILURE = \"FETCH_POKEMON_FAILURE\";\r\n","import { callPokemonAPI } from \"../Components/PokemonGrid/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {useEffect } from 'react';\r\n\r\nconst useFetchPokemonEffect = () => {\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n      dispatch(callPokemonAPI());\r\n    }, [dispatch]);\r\n  };\r\n\r\n  export default useFetchPokemonEffect;","import React, { useMemo } from \"react\";\r\nimport Scroll from \"../Scroll/Scroll\";\r\nimport CardList from \"../CardList/CardList\";\r\nimport ErrorBoundary from \"../ErrorBoundary/ErrorBoundary\";\r\nimport { getRandomFromArray, filterArrayByText } from \"../../lib/arrayUtil\";\r\nimport useFetchPokemonEffect from '../../utils/useFetchPokemonEffect';\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nconst PokemonGrid = () => {\r\n  useFetchPokemonEffect();\r\n\r\n  const pokemons = useSelector((state) => state.setPokemon.pokemon);\r\n  const isPending = useSelector((state) => state.setPokemon.isPending);\r\n  const searchField = useSelector((state) => state.changeSearchBox.searchField);\r\n  const hasError = useSelector((state) => state.setPokemon.hasError);\r\n  console.log(pokemons);\r\n\r\n  const randomPokemon = useMemo(() => getRandomFromArray(pokemons, 15), [\r\n    pokemons,\r\n  ]);\r\n\r\n  return (\r\n    <Scroll>\r\n      {hasError ? (\r\n        <h1>Something Went Wrong...</h1>\r\n      ) : isPending ? (\r\n        <h1>Loading...</h1>\r\n      ) : (\r\n        <ErrorBoundary>\r\n          <CardList\r\n            pokemons={\r\n              searchField\r\n                ? filterArrayByText(pokemons, searchField, 15)\r\n                : randomPokemon\r\n            }\r\n          />\r\n        </ErrorBoundary>\r\n      )}\r\n    </Scroll>\r\n  );\r\n};\r\n\r\nexport default PokemonGrid;\r\n","export const getRandomFromArray = (array, n)=>{\r\n    const shuffled = array.sort(() => 0.5 - Math.random());\r\n    return shuffled.slice(0, n)\r\n}\r\n\r\nexport const filterArrayByText= (array,text, n) =>{\r\n    return array.filter(element=> (element.name).toLowerCase().includes(text.toLowerCase())).slice(0,n);\r\n}\r\n\r\n","import React, {Fragment} from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"../Header/Header\"\r\nimport PokemonGrid from \"../PokemonGrid/PokemonGrid\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Fragment>\r\n      <Header/>\r\n      <PokemonGrid/>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { SET_SEARCH_BOX } from './actionTypes';\r\n\r\nconst initialState = {\r\n    searchField: ''\r\n}\r\n\r\nconst changeSearchBox = (state = initialState, action = {}) => {\r\n    switch (action.type){\r\n        case SET_SEARCH_BOX:\r\n            return {...state, searchField: action.text};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default changeSearchBox;","import {\r\n  FETCH_POKEMON_PENDING,\r\n  FETCH_POKEMON_SUCCESS,\r\n  FETCH_POKEMON_FAILURE,\r\n} from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n  pokemon: [],\r\n  isPending: false,\r\n  hasError: false,\r\n  error: ''\r\n};\r\n\r\nconst setPokemon = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case FETCH_POKEMON_PENDING:\r\n      return {...state, isPending: true };\r\n    case FETCH_POKEMON_SUCCESS:\r\n      return {...state,\r\n        pokemon: action.pokemon,\r\n        isPending: false,\r\n      };\r\n      \r\n    case FETCH_POKEMON_FAILURE:\r\n      return {...state, \r\n        hasError: true,\r\n        error: action.error,\r\n        isPending: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default setPokemon;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from './Components/App/App';\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from 'react-redux';         // passing store to containers\r\nimport { createStore, applyMiddleware, combineReducers } from 'redux';            // create app (store) state\r\nimport changeSearchBox from './Components/Header/reducer';\r\nimport setPokemon from './Components/PokemonGrid/reducers';\r\nimport { createLogger } from \"redux-logger\";\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  setPokemon,\r\n  changeSearchBox\r\n})\r\n\r\nconst store = createStore(rootReducer, \r\n  applyMiddleware(\r\n    createLogger(),\r\n    thunkMiddleware)\r\n    );\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store = {store}>\r\n      <App/>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}